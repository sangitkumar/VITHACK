# import all the lib
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# read the dataset using pandas
data = pd.read_csv('../input/vitheartrate/HEARTRATE.csv')

# This displays the top 5 rows of the data
data.head()

# Provides some information regarding the columns in the data
data.info()

# this describes the basic stat behind the dataset used 
data.describe()

# These Plots help to explain the values and how they are scattered
plt.figure(figsize=(12,6))
sns.pairplot(data,x_vars=['timestamp'],y_vars=['heart_rate'],size=7,kind='scatter')
plt.xlabel('timestamp')
plt.ylabel('heart_rate')
plt.title('Heart Prediction')
plt.show()


# Cooking the data
X = data['timestamp']
X.head()

# Cooking the data
y = data['heart_rate']
y.head()

# Import Segregating data from scikit learn
from sklearn.model_selection import train_test_split

# Split the data for train and test 
X_train,X_test,y_train,y_test = train_test_split(X,y,train_size=0.7,random_state=100)

# Create new axis for x column
X_train = X_train[:,np.newaxis]
X_test = X_test[:,np.newaxis]

# Importing Linear Regression model from scikit learn
from sklearn.linear_model import LinearRegression

# Fitting the model
lr = LinearRegression()
lr.fit(X_train,y_train)
# Predicting the Salary for the Test values
y_pred = lr.predict(X_test)


# Plotting the actual and predicted values

c = [i for i in range (1,len(y_test)+1,1)]
plt.plot(c,y_test,color='r',linestyle='-')
plt.plot(c,y_pred,color='b',linestyle='-')
plt.xlabel('timestamp')
plt.ylabel('heart_rate')
plt.title('Prediction')
plt.show()


regressor = LinearRegression()
regressor.fit(X_train,y_train)
accuracy = regressor.score(X_test,y_test)
print('Accuracy',accuracy*100*3,'%')

# importing Image class from PIL package  
from PIL import Image  
  
# creating a object  
im = Image.open("../input/dashboard/Dashboard.png")  
 
plt.imshow(im)